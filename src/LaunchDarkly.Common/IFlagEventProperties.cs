using LaunchDarkly.Client;

namespace LaunchDarkly.Common
{
    /// <summary>
    /// Common interface for the subset of feature flag properties that are required for the event logic
    /// (since the details of the feature flag model are different between server-side and mobile).
    /// </summary>
    internal interface IFlagEventProperties
    {
        string Key { get; }
        int Version { get; }
        bool TrackEvents { get; }
        long? DebugEventsUntilDate { get; }

        /// <summary>
        /// Determines whether a particular kind of result generated by this flag should be considered part
        /// of an experiment. In this context, an experiment means that the corresponding event should get
        /// full detail and include the reason, even if it normally would not.
        /// 
        /// In the server-side SDK, this decision is based on both the flag and the evaluation reason. In
        /// the client-side SDK, it has already been decided for us when LaunchDarkly evaluated the flag.
        /// </summary>
        /// <param name="reason">the evaluation reason for the result, if available</param>
        /// <returns>true if experiment mode should be used for this combination of flag and reason</returns>
        bool IsExperiment(EvaluationReason reason);
    }
}
